# import the necessary packages
from __future__ import print_function
from imutils.object_detection import non_max_suppression
import numpy as np
import cv2


#initialise the Histogram of Oriented Gradient (HOG) descriptor/person detector
hog = cv2.HOGDescriptor()
hog.setSVMDetector(cv2.HOGDescriptor_getDefaultPeopleDetector())


cap = cv2.VideoCapture(1)
while True:
    ret, frame = cap.read()
    # using HOG to detect people in the image
    (rects, weights) = hog.detectMultiScale(frame, winStride=(4, 4), padding=(4, 4), scale=1.05)
    # drawing the bounding boxes generated by HOG exclusively- uncomment to see without non-max-supression
    # for(x, y, w, h) in rects:
    #   cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 0 , 255), 2)

    #applying non-maxima supressions ot the bounding boxes using a faily large
    #overlap threshold to try to maintain overlapping boxes that are still people
    rects = np.array([[x,y,x+w, y+h] for(x,y,w,h) in rects])
    pick = non_max_suppression(rects, probs=None, overlapThresh=0.8)

    #draw final bounding boxes
    for (xA, yA, xB, yB) in pick:
        cv2.rectangle(frame, (xA, yA), (xB, yB), (0,255,0), 2)

    cv2.imshow('frame', frame)
    k=cv2.waitKey(1)
    if k==27:
        break

cap.release()
cv2.destroyAllWindows()



